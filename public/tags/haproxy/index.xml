<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HAProxy on .com</title><link>http://localhost:1313/tags/haproxy/</link><description>Recent content in HAProxy on .com</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 21 Mar 2025 05:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/haproxy/index.xml" rel="self" type="application/rss+xml"/><item><title>Using OpenTelemetry, OpenObserve, and Grafana to collect, transform, and visualize Logs, Metrics, and Traces</title><link>http://localhost:1313/blog/post-1/</link><pubDate>Fri, 21 Mar 2025 05:00:00 +0000</pubDate><guid>http://localhost:1313/blog/post-1/</guid><description>&lt;br>
&lt;h5 id="1-introduction">1. Introduction&lt;/h5>
&lt;p>Since I’m hosting critical services—like a home automation platform, file storage, and photo storage—for people close to me, monitoring the health and performance of these systems is essential. With so many tools and services available today for logging, metrics, and tracing, it was quite a journey to select the individual components that eventually came together to form this observability stack. What began as a solution using the kube-prometheus-stack Helm chart and a wonky relay to forward AlertManager notifications to nfty.sh, eventually evolved into a more robust and scalable stack. The core of it consists of OpenTelemetry collectors, OpenObserve as the central monitoring hub, and Grafana to visualize and share the collected data.&lt;/p></description></item></channel></rss>